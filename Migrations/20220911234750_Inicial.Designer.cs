// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegistroPersona.DAL;

#nullable disable

namespace RegistroPersona.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20220911234750_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("RegistroPersona.Models.Ocupaciones", b =>
                {
                    b.Property<int>("OcupacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Salario")
                        .HasColumnType("REAL");

                    b.HasKey("OcupacionId");

                    b.ToTable("Ocupaciones");
                });

            modelBuilder.Entity("RegistroPersona.Models.PersonaDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Persona")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.HasIndex("TipoId");

                    b.ToTable("PersonaDetalle");
                });

            modelBuilder.Entity("RegistroPersona.Models.Personas", b =>
                {
                    b.Property<int>("PersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FechaNacimiento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OcupacionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonaId");

                    b.HasIndex("OcupacionId");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("RegistroPersona.Models.TiposTelefonos", b =>
                {
                    b.Property<int>("TiposTelefonoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TiposTelefonoId");

                    b.ToTable("TipoTelefono");

                    b.HasData(
                        new
                        {
                            TiposTelefonoId = 1,
                            Descripcion = "Casa"
                        },
                        new
                        {
                            TiposTelefonoId = 2,
                            Descripcion = "Celular"
                        });
                });

            modelBuilder.Entity("RegistroPersona.Models.PersonaDetalle", b =>
                {
                    b.HasOne("RegistroPersona.Models.Personas", null)
                        .WithMany("PersonaDetalle")
                        .HasForeignKey("PersonaId");

                    b.HasOne("RegistroPersona.Models.TiposTelefonos", "tiposTelefonos")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tiposTelefonos");
                });

            modelBuilder.Entity("RegistroPersona.Models.Personas", b =>
                {
                    b.HasOne("RegistroPersona.Models.Ocupaciones", "Ocupacion")
                        .WithMany()
                        .HasForeignKey("OcupacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ocupacion");
                });

            modelBuilder.Entity("RegistroPersona.Models.Personas", b =>
                {
                    b.Navigation("PersonaDetalle");
                });
#pragma warning restore 612, 618
        }
    }
}
